// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: index/public_index.proto

package index

import (
	context "context"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GatewayStatus int32

const (
	GatewayStatus_UnHealth GatewayStatus = 0
	GatewayStatus_Health   GatewayStatus = 1
)

// Enum value maps for GatewayStatus.
var (
	GatewayStatus_name = map[int32]string{
		0: "UnHealth",
		1: "Health",
	}
	GatewayStatus_value = map[string]int32{
		"UnHealth": 0,
		"Health":   1,
	}
)

func (x GatewayStatus) Enum() *GatewayStatus {
	p := new(GatewayStatus)
	*p = x
	return p
}

func (x GatewayStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GatewayStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_index_public_index_proto_enumTypes[0].Descriptor()
}

func (GatewayStatus) Type() protoreflect.EnumType {
	return &file_index_public_index_proto_enumTypes[0]
}

func (x GatewayStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GatewayStatus.Descriptor instead.
func (GatewayStatus) EnumDescriptor() ([]byte, []int) {
	return file_index_public_index_proto_rawDescGZIP(), []int{0}
}

type IndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start uint64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End   uint64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *IndexReq) Reset() {
	*x = IndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_public_index_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexReq) ProtoMessage() {}

func (x *IndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_index_public_index_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexReq.ProtoReflect.Descriptor instead.
func (*IndexReq) Descriptor() ([]byte, []int) {
	return file_index_public_index_proto_rawDescGZIP(), []int{0}
}

func (x *IndexReq) GetStart() uint64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *IndexReq) GetEnd() uint64 {
	if x != nil {
		return x.End
	}
	return 0
}

type SharedMem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxSize  uint64               `protobuf:"varint,1,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`
	UsedSize uint64               `protobuf:"varint,2,opt,name=used_size,json=usedSize,proto3" json:"used_size,omitempty"`
	UsedNode uint64               `protobuf:"varint,3,opt,name=used_node,json=usedNode,proto3" json:"used_node,omitempty"`
	Time     *timestamp.Timestamp `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *SharedMem) Reset() {
	*x = SharedMem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_public_index_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedMem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedMem) ProtoMessage() {}

func (x *SharedMem) ProtoReflect() protoreflect.Message {
	mi := &file_index_public_index_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedMem.ProtoReflect.Descriptor instead.
func (*SharedMem) Descriptor() ([]byte, []int) {
	return file_index_public_index_proto_rawDescGZIP(), []int{1}
}

func (x *SharedMem) GetMaxSize() uint64 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *SharedMem) GetUsedSize() uint64 {
	if x != nil {
		return x.UsedSize
	}
	return 0
}

func (x *SharedMem) GetUsedNode() uint64 {
	if x != nil {
		return x.UsedNode
	}
	return 0
}

func (x *SharedMem) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type Connections struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accepted uint64               `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	Active   uint64               `protobuf:"varint,2,opt,name=active,proto3" json:"active,omitempty"`
	Handled  uint64               `protobuf:"varint,3,opt,name=handled,proto3" json:"handled,omitempty"`
	Reading  uint64               `protobuf:"varint,4,opt,name=reading,proto3" json:"reading,omitempty"`
	Requests uint64               `protobuf:"varint,5,opt,name=requests,proto3" json:"requests,omitempty"`
	Waiting  uint64               `protobuf:"varint,6,opt,name=waiting,proto3" json:"waiting,omitempty"`
	Writing  uint64               `protobuf:"varint,7,opt,name=writing,proto3" json:"writing,omitempty"`
	Time     *timestamp.Timestamp `protobuf:"bytes,8,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *Connections) Reset() {
	*x = Connections{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_public_index_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connections) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connections) ProtoMessage() {}

func (x *Connections) ProtoReflect() protoreflect.Message {
	mi := &file_index_public_index_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connections.ProtoReflect.Descriptor instead.
func (*Connections) Descriptor() ([]byte, []int) {
	return file_index_public_index_proto_rawDescGZIP(), []int{2}
}

func (x *Connections) GetAccepted() uint64 {
	if x != nil {
		return x.Accepted
	}
	return 0
}

func (x *Connections) GetActive() uint64 {
	if x != nil {
		return x.Active
	}
	return 0
}

func (x *Connections) GetHandled() uint64 {
	if x != nil {
		return x.Handled
	}
	return 0
}

func (x *Connections) GetReading() uint64 {
	if x != nil {
		return x.Reading
	}
	return 0
}

func (x *Connections) GetRequests() uint64 {
	if x != nil {
		return x.Requests
	}
	return 0
}

func (x *Connections) GetWaiting() uint64 {
	if x != nil {
		return x.Waiting
	}
	return 0
}

func (x *Connections) GetWriting() uint64 {
	if x != nil {
		return x.Writing
	}
	return 0
}

func (x *Connections) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type RequestTotal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InBytes  uint64 `protobuf:"varint,1,opt,name=in_bytes,json=inBytes,proto3" json:"in_bytes,omitempty"`
	OutBytes uint64 `protobuf:"varint,2,opt,name=out_bytes,json=outBytes,proto3" json:"out_bytes,omitempty"`
	X1Xx     uint64 `protobuf:"varint,3,opt,name=_1xx,json=1xx,proto3" json:"_1xx,omitempty"`
	X2Xx     uint64 `protobuf:"varint,4,opt,name=_2xx,json=2xx,proto3" json:"_2xx,omitempty"`
	X3Xx     uint64 `protobuf:"varint,5,opt,name=_3xx,json=3xx,proto3" json:"_3xx,omitempty"`
	X4Xx     uint64 `protobuf:"varint,6,opt,name=_4xx,json=4xx,proto3" json:"_4xx,omitempty"`
	X5Xx     uint64 `protobuf:"varint,7,opt,name=_5xx,json=5xx,proto3" json:"_5xx,omitempty"`
}

func (x *RequestTotal) Reset() {
	*x = RequestTotal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_public_index_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestTotal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestTotal) ProtoMessage() {}

func (x *RequestTotal) ProtoReflect() protoreflect.Message {
	mi := &file_index_public_index_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestTotal.ProtoReflect.Descriptor instead.
func (*RequestTotal) Descriptor() ([]byte, []int) {
	return file_index_public_index_proto_rawDescGZIP(), []int{3}
}

func (x *RequestTotal) GetInBytes() uint64 {
	if x != nil {
		return x.InBytes
	}
	return 0
}

func (x *RequestTotal) GetOutBytes() uint64 {
	if x != nil {
		return x.OutBytes
	}
	return 0
}

func (x *RequestTotal) GetX1Xx() uint64 {
	if x != nil {
		return x.X1Xx
	}
	return 0
}

func (x *RequestTotal) GetX2Xx() uint64 {
	if x != nil {
		return x.X2Xx
	}
	return 0
}

func (x *RequestTotal) GetX3Xx() uint64 {
	if x != nil {
		return x.X3Xx
	}
	return 0
}

func (x *RequestTotal) GetX4Xx() uint64 {
	if x != nil {
		return x.X4Xx
	}
	return 0
}

func (x *RequestTotal) GetX5Xx() uint64 {
	if x != nil {
		return x.X5Xx
	}
	return 0
}

type CacheTotal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Miss        int64 `protobuf:"varint,1,opt,name=miss,proto3" json:"miss,omitempty"`
	Bypass      int64 `protobuf:"varint,2,opt,name=bypass,proto3" json:"bypass,omitempty"`
	Expired     int64 `protobuf:"varint,3,opt,name=expired,proto3" json:"expired,omitempty"`
	Stale       int64 `protobuf:"varint,4,opt,name=stale,proto3" json:"stale,omitempty"`
	Updating    int64 `protobuf:"varint,5,opt,name=updating,proto3" json:"updating,omitempty"`
	Revalidated int64 `protobuf:"varint,6,opt,name=revalidated,proto3" json:"revalidated,omitempty"`
	Hit         int64 `protobuf:"varint,7,opt,name=hit,proto3" json:"hit,omitempty"`
	Scarce      int64 `protobuf:"varint,8,opt,name=scarce,proto3" json:"scarce,omitempty"`
}

func (x *CacheTotal) Reset() {
	*x = CacheTotal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_public_index_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheTotal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheTotal) ProtoMessage() {}

func (x *CacheTotal) ProtoReflect() protoreflect.Message {
	mi := &file_index_public_index_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheTotal.ProtoReflect.Descriptor instead.
func (*CacheTotal) Descriptor() ([]byte, []int) {
	return file_index_public_index_proto_rawDescGZIP(), []int{4}
}

func (x *CacheTotal) GetMiss() int64 {
	if x != nil {
		return x.Miss
	}
	return 0
}

func (x *CacheTotal) GetBypass() int64 {
	if x != nil {
		return x.Bypass
	}
	return 0
}

func (x *CacheTotal) GetExpired() int64 {
	if x != nil {
		return x.Expired
	}
	return 0
}

func (x *CacheTotal) GetStale() int64 {
	if x != nil {
		return x.Stale
	}
	return 0
}

func (x *CacheTotal) GetUpdating() int64 {
	if x != nil {
		return x.Updating
	}
	return 0
}

func (x *CacheTotal) GetRevalidated() int64 {
	if x != nil {
		return x.Revalidated
	}
	return 0
}

func (x *CacheTotal) GetHit() int64 {
	if x != nil {
		return x.Hit
	}
	return 0
}

func (x *CacheTotal) GetScarce() int64 {
	if x != nil {
		return x.Scarce
	}
	return 0
}

type GatewayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostName     string         `protobuf:"bytes,1,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	Version      string         `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Ip           string         `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Status       GatewayStatus  `protobuf:"varint,4,opt,name=status,proto3,enum=dashboard.index.GatewayStatus" json:"status,omitempty"`
	SharedMemory []*SharedMem   `protobuf:"bytes,5,rep,name=shared_memory,json=sharedMemory,proto3" json:"shared_memory,omitempty"`
	Connections  []*Connections `protobuf:"bytes,6,rep,name=connections,proto3" json:"connections,omitempty"`
	RequestTotal *RequestTotal  `protobuf:"bytes,7,opt,name=request_total,json=requestTotal,proto3" json:"request_total,omitempty"`
	CacheTotal   *CacheTotal    `protobuf:"bytes,8,opt,name=cache_total,json=cacheTotal,proto3" json:"cache_total,omitempty"`
}

func (x *GatewayInfo) Reset() {
	*x = GatewayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_public_index_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayInfo) ProtoMessage() {}

func (x *GatewayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_index_public_index_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayInfo.ProtoReflect.Descriptor instead.
func (*GatewayInfo) Descriptor() ([]byte, []int) {
	return file_index_public_index_proto_rawDescGZIP(), []int{5}
}

func (x *GatewayInfo) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *GatewayInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GatewayInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *GatewayInfo) GetStatus() GatewayStatus {
	if x != nil {
		return x.Status
	}
	return GatewayStatus_UnHealth
}

func (x *GatewayInfo) GetSharedMemory() []*SharedMem {
	if x != nil {
		return x.SharedMemory
	}
	return nil
}

func (x *GatewayInfo) GetConnections() []*Connections {
	if x != nil {
		return x.Connections
	}
	return nil
}

func (x *GatewayInfo) GetRequestTotal() *RequestTotal {
	if x != nil {
		return x.RequestTotal
	}
	return nil
}

func (x *GatewayInfo) GetCacheTotal() *CacheTotal {
	if x != nil {
		return x.CacheTotal
	}
	return nil
}

type IndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*GatewayInfo `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *IndexResp) Reset() {
	*x = IndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_public_index_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexResp) ProtoMessage() {}

func (x *IndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_index_public_index_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexResp.ProtoReflect.Descriptor instead.
func (*IndexResp) Descriptor() ([]byte, []int) {
	return file_index_public_index_proto_rawDescGZIP(), []int{6}
}

func (x *IndexResp) GetData() []*GatewayInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_index_public_index_proto protoreflect.FileDescriptor

var file_index_public_index_proto_rawDesc = []byte{
	0x0a, 0x18, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x44, 0x0a, 0x08, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x19,
	0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x32, 0x02, 0x20, 0x00, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x09, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x75, 0x73, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x75, 0x73, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xf5, 0x01, 0x0a,
	0x0b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x72,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x77, 0x72, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x5f, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x69, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x11, 0x0a,
	0x04, 0x5f, 0x31, 0x78, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x31, 0x78, 0x78,
	0x12, 0x11, 0x0a, 0x04, 0x5f, 0x32, 0x78, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x32, 0x78, 0x78, 0x12, 0x11, 0x0a, 0x04, 0x5f, 0x33, 0x78, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x33, 0x78, 0x78, 0x12, 0x11, 0x0a, 0x04, 0x5f, 0x34, 0x78, 0x78, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x34, 0x78, 0x78, 0x12, 0x11, 0x0a, 0x04, 0x5f, 0x35, 0x78,
	0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x35, 0x78, 0x78, 0x22, 0xd0, 0x01, 0x0a,
	0x0a, 0x43, 0x61, 0x63, 0x68, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x69, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6d, 0x69, 0x73, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x68, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x61, 0x72, 0x63,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x63, 0x61, 0x72, 0x63, 0x65, 0x22,
	0x8f, 0x03, 0x0a, 0x0b, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3f,
	0x0a, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4d, 0x65,
	0x6d, 0x52, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12,
	0x3e, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x42, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x0a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x3d, 0x0a, 0x09, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x2a, 0x29, 0x0a, 0x0d, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x10, 0x01, 0x32, 0x5d, 0x0a, 0x0b, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x4e, 0x0a, 0x05, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x19, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x22, 0x0e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x08, 0x12, 0x06, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x6f, 0x72, 0x67, 0x2f, 0x62, 0x6c, 0x75, 0x65, 0x2d, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x3b, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_index_public_index_proto_rawDescOnce sync.Once
	file_index_public_index_proto_rawDescData = file_index_public_index_proto_rawDesc
)

func file_index_public_index_proto_rawDescGZIP() []byte {
	file_index_public_index_proto_rawDescOnce.Do(func() {
		file_index_public_index_proto_rawDescData = protoimpl.X.CompressGZIP(file_index_public_index_proto_rawDescData)
	})
	return file_index_public_index_proto_rawDescData
}

var file_index_public_index_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_index_public_index_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_index_public_index_proto_goTypes = []interface{}{
	(GatewayStatus)(0),          // 0: dashboard.index.GatewayStatus
	(*IndexReq)(nil),            // 1: dashboard.index.indexReq
	(*SharedMem)(nil),           // 2: dashboard.index.SharedMem
	(*Connections)(nil),         // 3: dashboard.index.Connections
	(*RequestTotal)(nil),        // 4: dashboard.index.RequestTotal
	(*CacheTotal)(nil),          // 5: dashboard.index.CacheTotal
	(*GatewayInfo)(nil),         // 6: dashboard.index.GatewayInfo
	(*IndexResp)(nil),           // 7: dashboard.index.IndexResp
	(*timestamp.Timestamp)(nil), // 8: google.protobuf.Timestamp
}
var file_index_public_index_proto_depIdxs = []int32{
	8, // 0: dashboard.index.SharedMem.time:type_name -> google.protobuf.Timestamp
	8, // 1: dashboard.index.Connections.time:type_name -> google.protobuf.Timestamp
	0, // 2: dashboard.index.GatewayInfo.status:type_name -> dashboard.index.GatewayStatus
	2, // 3: dashboard.index.GatewayInfo.shared_memory:type_name -> dashboard.index.SharedMem
	3, // 4: dashboard.index.GatewayInfo.connections:type_name -> dashboard.index.Connections
	4, // 5: dashboard.index.GatewayInfo.request_total:type_name -> dashboard.index.RequestTotal
	5, // 6: dashboard.index.GatewayInfo.cache_total:type_name -> dashboard.index.CacheTotal
	6, // 7: dashboard.index.IndexResp.data:type_name -> dashboard.index.GatewayInfo
	1, // 8: dashboard.index.PublicIndex.Index:input_type -> dashboard.index.indexReq
	7, // 9: dashboard.index.PublicIndex.Index:output_type -> dashboard.index.IndexResp
	9, // [9:10] is the sub-list for method output_type
	8, // [8:9] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_index_public_index_proto_init() }
func file_index_public_index_proto_init() {
	if File_index_public_index_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_index_public_index_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_public_index_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SharedMem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_public_index_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connections); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_public_index_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestTotal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_public_index_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheTotal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_public_index_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_public_index_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_index_public_index_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_index_public_index_proto_goTypes,
		DependencyIndexes: file_index_public_index_proto_depIdxs,
		EnumInfos:         file_index_public_index_proto_enumTypes,
		MessageInfos:      file_index_public_index_proto_msgTypes,
	}.Build()
	File_index_public_index_proto = out.File
	file_index_public_index_proto_rawDesc = nil
	file_index_public_index_proto_goTypes = nil
	file_index_public_index_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PublicIndexClient is the client API for PublicIndex service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PublicIndexClient interface {
	Index(ctx context.Context, in *IndexReq, opts ...grpc.CallOption) (*IndexResp, error)
}

type publicIndexClient struct {
	cc grpc.ClientConnInterface
}

func NewPublicIndexClient(cc grpc.ClientConnInterface) PublicIndexClient {
	return &publicIndexClient{cc}
}

func (c *publicIndexClient) Index(ctx context.Context, in *IndexReq, opts ...grpc.CallOption) (*IndexResp, error) {
	out := new(IndexResp)
	err := c.cc.Invoke(ctx, "/dashboard.index.PublicIndex/Index", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PublicIndexServer is the server API for PublicIndex service.
type PublicIndexServer interface {
	Index(context.Context, *IndexReq) (*IndexResp, error)
}

// UnimplementedPublicIndexServer can be embedded to have forward compatible implementations.
type UnimplementedPublicIndexServer struct {
}

func (*UnimplementedPublicIndexServer) Index(context.Context, *IndexReq) (*IndexResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Index not implemented")
}

func RegisterPublicIndexServer(s *grpc.Server, srv PublicIndexServer) {
	s.RegisterService(&_PublicIndex_serviceDesc, srv)
}

func _PublicIndex_Index_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IndexReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicIndexServer).Index(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dashboard.index.PublicIndex/Index",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicIndexServer).Index(ctx, req.(*IndexReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PublicIndex_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dashboard.index.PublicIndex",
	HandlerType: (*PublicIndexServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Index",
			Handler:    _PublicIndex_Index_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "index/public_index.proto",
}
